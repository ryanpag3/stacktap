name: Build and Test NestJS

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18 # Adjust the Node.js version if necessary
          cache: 'yarn'
          cache-dependency-path: '**/yarn.lock'

      # Install dependencies
      - name: Install Dependencies
        run: yarn install

      # Compile the application
      - name: Build Application
        run: yarn build

      # Run tests
      - name: Run Tests
        run: yarn test:cov

      # Optionally check for linting issues
      - name: Run Linter
        run: yarn lint

      # Upload test results (if you use a results formatter)
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: server/coverage/

      # Clean up cache if needed
      - name: Cleanup Node Modules
        run: |
          yarn cache clean
          rm -rf node_modules
  e2e-tests:
    runs-on: ubuntu-latest
    needs: build-and-test
    env:
      DATABASE_HOST: localhost
      DATABASE_PORT: 5433
      DATABASE_USER: stacktap
      DATABASE_PASSWORD: stacktap
      DATABASE_DB: stacktap
      JWT_SECRET: fcda17cc-0585-4a52-9ab3-d85dce0c51ad
    defaults:
      run:
        working-directory: ./server
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build and Run Docker Compose
        run: |
          docker compose -f ../docker/docker-compose.yaml up -d
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: yarn install
      - name: Run e2e tests
        run: yarn test:e2e
  
  docker:
    runs-on: ubuntu-latest
    needs: e2e-tests
    defaults:
      run:
        working-directory: ./server
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push feature branch tags
        uses: docker/build-push-action@v6
        with:
          context: ./server
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/stacktap-server:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/stacktap-server:${{ github.ref_name }}
      - name: Build and push master branch tags
        if: github.ref == 'refs/heads/master'
        uses: docker/build-push-action@v6
        with:
          context: ./server
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/stacktap-server:latest

